#  _                        
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  < 
#  \__|_| |_| |_|\__,_/_/\_\
#
# Karl Floersch's tmux.conf!  Feel free to use it and give me no credits.
# !!! MIT MIT MIT MIT MIT MIT !!!
#
# This is heavily based on my first computer science professor, snuggs's
# tmux.conf file. In fact it's almost identical. (should have forked his
# repo) -- this is him: https://githuab.com/snuggs
#
# "age is but a numba"
#
# I'd use } to navigate this so you can see each option on it's own.
# HAVE A GREAT DAY!
#                   $$\   $$\ $$$$$$$$\ 
#                   $$ | $$  |$$  _____|
#                   $$ |$$  / $$ |      
#                   $$$$$  /  $$$$$\    
#                   $$  $$<   $$  __|   
#                   $$ |\$$\  $$ |      
#                   $$ | \$$\ $$ |      
#                   \__|  \__|\__|      
#                 
# ॐ        ॐ        ॐ        ॐ        ॐ        ॐ        ॐ        ॐ 
                           
# **************  CHANGE PREFIX  ************** #
set -g prefix C-s
bind-key a send-prefix # for nested tmux sessions
 


# **************  LARGE HISTORY  ************** #
set-option -g history-limit 10000
 


# **************  COLORS  ************** #
setw -g mode-bg blue
set-option -g default-terminal "xterm-256color" #"screen-256color" #"screen-256color"
set-option -g pane-active-border-fg green
 


# **************  UTF8 SUPPORT  ************** #
set-window-option -g utf8 on
 


# **************  FIX SPLIT PANE LINE DRAW  ************** #
set-option -ga terminal-overrides ',*:enacs@:smacs@:rmacs@:acsc@'
 


# **************  BASIC SETTINGS?  ************** #
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
set-window-option -g window-status-current-fg white
setw -g window-status-current-attr reverse
 


# **************  SET WINDOW TITLE AUTOMATICALLY  ************** #
setw -g automatic-rename
 


# **************  STATUS BAR SETTINGS  ************** #
set-option -g status-utf8 on
set-option -g status-justify right
set-option -g status-bg black # colour213 # pink
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
set-option -g status-right '#[fg=red,bold][[ #(git branch) branch ]] #[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
set-option -g visual-activity on
 
# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'
 
 
# **************  UNBINDINGS  ************** #
unbind [   # copy mode bound to escape key
unbind p   # for some reason i need this too for copy mode
unbind j
unbind C-b # unbind default leader key
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split
 
 
# &&&**************  BINDINGS  **************$$$ #
#
# **************  RELOAD TMUX CONFIG  ************** #
bind-key r source-file ~/.tmux.conf
 

# **************  COPY MODE  ************** #
bind a copy-mode
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
setw -g mode-keys vi # use vim motion keys while in copy mode
# ***  OSX SPECIFIC SETTINGS TO USE THE SYSTEM CLIPBOARD  *** #
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
 


# **************  PANE CONTROL  ************** #

# **************  SPLIT PANES  ************** #
bind-key - split-window -v # split pane horizontally
bind-key \ split-window -h # split pane vertically

# **************  LIST ALL PANES  ************** #
bind-key Space list-panes

# **************  BREAK PANE  ************** #
bind-key Enter break-pane
 
# **************  PREVIOUS PANE  ************** #
bind-key -n C-up prev
bind-key -n C-left prev
 
# **************  NEXT PANE  ************** #
bind-key -n C-right next
bind-key -n C-down next

# **************  PANE NAVIGATION  ************** #
# **************  VIM FOR PANES  ************** #
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
 
# **************  RESIZE PANES  ************** #
bind-key C-h resize-pane -L
bind-key C-j resize-pane -D
bind-key C-k resize-pane -U
bind-key C-l resize-pane -R

 
# **************  WINDOWS  ************** #
set-window-option -g window-status-current-bg red
bind C-j previous-window
bind C-k next-window
bind-key C-s last-window # C-a C-a for last active window
bind A command-prompt "rename-window %%"
# By default, all windows in a session are constrained to the size of the 
# smallest client connected to that session, 
# even if both clients are looking at different windows. 
# It seems that in this particular case, Screen has the better default 
# where a window is only constrained in size if a smaller client 
# is actively looking at it.
setw -g aggressive-resize on


 
 
# **************  LAYOUTS  ************** #
bind o select-layout "active-only"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind M-r rotate-window



#------------------------------------------------------------
